From 797f16fa0cb0caac638500213307e425620bb1f1 Mon Sep 17 00:00:00 2001
From: Mauri Mustonen <mauri.mustonen@tuni.fi>
Date: Fri, 8 Jan 2021 12:49:23 +0200
Subject: [PATCH] disable jump threading pass from duplicating blocks and
 messing up parellel region construction

---
 lib/CL/pocl_llvm_utils.cc | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/lib/CL/pocl_llvm_utils.cc b/lib/CL/pocl_llvm_utils.cc
index aa0d33dd..b48cc78d 100644
--- a/lib/CL/pocl_llvm_utils.cc
+++ b/lib/CL/pocl_llvm_utils.cc
@@ -323,6 +323,21 @@ void InitializeLLVM() {
     O->addOccurrence(1, StringRef("vectorizer-min-trip-count"), StringRef("2"),
                      false);
 
+    // Disable jump threading optimization with following two options from
+    // duplicating blocks. Using jump threading will mess up parallel region
+    // construction especially when kernel contains barriers.
+    // TODO: If enabled then parallel region construction code needs
+    // improvements and make sure it doesn't disallow other optimizations like
+    // vectorization.
+    O = opts["jump-threading-threshold"];
+    assert(O && "could not find LLVM option 'jump-threading-threshold'");
+    O->addOccurrence(1, StringRef("jump-threading-threshold"), StringRef("0"),
+                     false);
+    O = opts["jump-threading-implication-search-threshold"];
+    assert(O && "could not find LLVM option 'jump-threading-implication-search-threshold'");
+    O->addOccurrence(1, StringRef("jump-threading-implication-search-threshold"), StringRef("0"),
+                     false);
+
     if (pocl_get_bool_option("POCL_VECTORIZER_REMARKS", 0) == 1) {
       // Enable diagnostics from the loop vectorizer.
       O = opts["pass-remarks-missed"];
-- 
2.25.1

