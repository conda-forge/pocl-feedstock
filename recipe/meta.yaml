{% set version = "6.0" %}
{% set build_number = 4 %}
{% set sha256 = "de9710223fc1855f833dbbf42ea2681e06aa8ec0464f0201104dc80a74dfd1f2" %}

{% set llvm_version = "15.0.7" %}
{% set cuda_version = "12.0" %}

package:
  name: pocl-core
  version: {{ version }}

source:
  - url: https://github.com/pocl/pocl/archive/refs/tags/v{{ version.replace(".rc", "-RC") }}.tar.gz
    sha256: {{ sha256 }}
    patches:
      # backport equivalent of https://github.com/pocl/pocl/commit/aa5595f871
      # also for pocld/daemon.cc (c.f. https://github.com/pocl/pocl/pull/1392)
      - patches/0001-gh1392.patch
      - patches/0002-pocld.patch
      - patches/0003-switch-to-newer-find_package-CUDAToolkit-for-CUDA-12.patch
      # https://github.com/conda-forge/pocl-feedstock/pull/106#issuecomment-2467398973
      - patches/disable-cuda-test.patch

build:
  number: {{ build_number }}
  skip: true  # [win]
  skip: true  # [cuda_compiler_version == "11.8"]
  skip: true  # [enable_cuda and (cuda_compiler_version == "None")]
  skip: true  # [not enable_cuda and (cuda_compiler_version != "None")]
  script_env:   # [enable_cuda]
    - CUDA_HOME   # [enable_cuda]
  ignore_run_exports_from:
    # we only need libcuda.so.1
    - {{ compiler('cuda') }}   # [enable_cuda]
    - cuda-version             # [enable_cuda]
    - cuda-driver-dev          # [enable_cuda]
    - cuda-cudart-dev          # [enable_cuda]

requirements:
  build:
    - cmake
    - make
    - pkg-config
    - {{ compiler('cxx') }}                                   # [not osx]
    - clangxx_{{ target_platform }} {{ llvm_version }}.*      # [osx]
    - {{ compiler('cuda') }}                                  # [enable_cuda]
    - llvmdev {{ llvm_version }}.*       # [build_platform != target_platform]
    - clangdev {{ llvm_version }}.*      # [build_platform != target_platform]
    # only exists from v16, but cannot leave unpinned because
    # clang 15 is not compatible with libc++ 19 anymore
    - libcxx-devel {{ llvm_version.split(".")[0]|int + 1 }}   # [osx]
    - {{ stdlib("c") }}
  host:
    - ocl-icd                            # [linux]
    # FIXME: Undo the version restriction in the line below once pocl-6.1 is released (see https://github.com/conda-forge/pocl-feedstock/pull/106)
    - khronos-opencl-icd-loader <2024.10          # [osx]
    - libhwloc
    - clhpp

    - llvmdev {{ llvm_version }}.*
    - clangdev {{ llvm_version }}.*
    - llvm {{ llvm_version }}.*
    - libclang-cpp {{ llvm_version }}.*
    - llvm-spirv-{{ llvm_version.split(".")[0] }}
    - cuda-version {{ cuda_version }}.*  # [enable_cuda]
    - cuda-driver-dev                    # [enable_cuda]
    - cuda-cudart-dev                    # [enable_cuda]

    - zlib                               # [osx]
    - ld64 >=530                         # [osx]
  run:
    - llvm-spirv-{{ llvm_version.split(".")[0] }}
    - ocl-icd                            # [linux]
    - khronos-opencl-icd-loader          # [osx]
    # See https://github.com/conda-forge/cctools-and-ld64-feedstock/issues/66
    # why we need the upper bound for ld64
    - ld64 >=530                         # [osx]
    - {{ pin_compatible('libhwloc') }}
  run_constrained:
    - pocl {{ version }}.*

test:
  commands:
    - test -f $PREFIX/lib/libpocl${SHLIB_EXT}     # [unix]

outputs:
  - name: pocl-core

  - name: pocl-cpu-minimal
    script: install-pkg.sh
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage("pocl-core", exact=True) }}
        - llvm {{ llvm_version }}.*
        - libhwloc
      run:
        - {{ pin_subpackage("pocl-core", exact=True) }}
    test:
      commands:
        - test -f $PREFIX/lib/pocl/libpocl-devices-basic.so     # [unix]

  - name: pocl-cpu
    script: install-pkg.sh
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage("pocl-core", exact=True) }}
        - {{ pin_subpackage("pocl-cpu-minimal", exact=True) }}
        - {{ pin_subpackage("pocl-remote", exact=True) }}
        - llvm {{ llvm_version }}.*
        - libhwloc
      run:
        - {{ pin_subpackage("pocl-core", exact=True) }}
        - {{ pin_subpackage("pocl-cpu-minimal", exact=True) }}
        - {{ pin_subpackage("pocl-remote", exact=True) }}
    test:
      requires:
        - pyopencl
        - curl
        - pocl-cpu
      commands:
        - test -f $PREFIX/lib/pocl/libpocl-devices-pthread.so     # [unix]
        # Remove apple icd so that only pocl is found
        - rm -f $PREFIX/etc/OpenCL/vendors/apple.icd     # [osx]
        - export OCL_ICD_DEBUG=15                     # [linux]
        - export POCL_DEBUG=1
        - curl -O https://raw.githubusercontent.com/inducer/pyopencl/main/examples/demo.py
        - python demo.py

  - name: pocl-cuda
    build:
      skip: true  # [not enable_cuda]
    script: install-pkg.sh
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage("pocl-core", exact=True) }}
        - llvm {{ llvm_version }}.*
        - libhwloc
      run:
        - {{ pin_subpackage("pocl-core", exact=True) }}
      run_constrained:
        - __cuda >={{ cuda_version }}
    test:
      commands:
        - test -f $PREFIX/lib/pocl/libpocl-devices-cuda.so      # [unix]

  - name: pocl-remote
    script: install-pkg.sh
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - {{ pin_subpackage("pocl-core", exact=True) }}
        - llvm {{ llvm_version }}.*
        - libhwloc
      run:
        - {{ pin_subpackage("pocl-core", exact=True) }}
    test:
      commands:
        - test -f $PREFIX/lib/pocl/libpocl-devices-remote.so      # [unix]

  - name: pocl
    requirements:
      host:
        # Need hwloc here for the pocl meta-package to have two hashes
        # Otherwise only one of them gets uploaded and the `exact=True`
        # conditions below prevent installations
        - libhwloc
      run:
        - {{ pin_subpackage("pocl-core", exact=True) }}
        - {{ pin_subpackage("pocl-cpu", exact=True) }}
        - {{ pin_subpackage("pocl-cpu-minimal", exact=True) }}
        - {{ pin_subpackage("pocl-remote", exact=True) }}
        - {{ pin_subpackage("pocl-cuda", exact=True) }}         # [enable_cuda]
    test:
      commands:
        - test -f $PREFIX/lib/pocl/libpocl-devices-pthread.so   # [unix]
        - test -f $PREFIX/lib/pocl/libpocl-devices-basic.so     # [unix]
        - test -f $PREFIX/lib/pocl/libpocl-devices-cuda.so      # [enable_cuda]
      downstreams:
        - pyopencl

about:
  home: http://portablecl.org/
  license: MIT
  license_file:
    - LICENSE
    - LLVM-License.txt
    - LICENSE_THIRDPARTY  # [osx]
  summary: Portable Computing Language -- a portable open source implementation of the OpenCL standard
  dev_url: https://github.com/pocl/pocl
  doc_url: http://portablecl.org/docs/html/

extra:
  feedstock-name: pocl
  recipe-maintainers:
    - inducer
    - mattwala
    - isuruf
    - matthiasdiener
